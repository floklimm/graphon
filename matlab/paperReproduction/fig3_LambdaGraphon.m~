% Community detection in Lambda graphon

% 0) Set some parameters
n=2000; % number of discretisation steps


% 1) Construct a graphon
[W] = LambdaGraphon(n,0.2);


% 2) Community detection on it
% a) compute the modularity matrix
[B] = modularityGraphon(W);

% b) find the optimal group structure with the GenLouvain algorithm
[S,Q] = genlouvain(B);
Q = Q/sum(sum(W))




% 3) Plotting
figure('Color',[1 1 1],'Position',[ 1, 1, 1000,600])

% a) Plot the graphon
s2=subplot(1,4,1);
imagesc(W)
yticks('')
xticks('')
title('W(x,y)','interpreter','latex')
axis square
box on

s2Pos = get(s2,'position');

hb = colorbar('location','westoutside');
hb.TickLabelInterpreter = 'latex';


load xkcd_rgb_data.mat
redBetween  = (rgb('white') + rgb('dark red'))/2;
cmap = [colorramp2( 'dark blue',rgb('dark blue')*2,45);colorramp2( rgb('dark blue')*2,'white',15) ;colorramp2( 'white',redBetween,10);colorramp2( redBetween,'dark red',110)];


caxis([-0.5,1])
colormap(0.99*cmap)
set(s2,'position',s2Pos);

subplot(1,4,2)
plot(sum(W)/n,1:n,'LineWidth',2,'Color','k')
set(gca,'XAxisLocation','top')
yticks('')
ylabel('x','interpreter','latex')
xlabel('degree k(x)','interpreter','latex')
set(gca, 'YDir','reverse')
axis square
xlim([0,1])
subplot(1,4,3)
imagesc(B)
%axis off
yticks('')
xticks('')
title('B(x,y)','interpreter','latex')
axis square
caxis([-0.5,1])


subplot(1,4,4)
scatter(S,1:n,'MarkerEdgeColor','k')
box on
set(gca,'XAxisLocation','top')
yticks('')
xticks([1,2])
ylabel('x','interpreter','latex')
xlabel('community g(x)','interpreter','latex')
set(gca, 'YDir','reverse')
axis square
